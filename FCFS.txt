#include <iostream>
using namespace std;

void findWaitingTime(int processes[], int n, int bt[], int at[], int wt[])
{
    int service_time[n];
    service_time[0] = at[0];  
    wt[0] = 0;

    for (int i = 1; i < n; i++) {
        service_time[i] = service_time[i - 1] + bt[i - 1];
        wt[i] = service_time[i] - at[i];

        if (wt[i] < 0) {
            wt[i] = 0;
        }
    }
}

void findTurnAroundTime(int processes[], int n, int bt[], int wt[], int tat[])
{
    for (int i = 0; i < n; i++) {
        tat[i] = bt[i] + wt[i];
    }
}

void findavgTime(int processes[], int n, int bt[], int at[])
{
    int wt[n], tat[n], total_wt = 0, total_tat = 0;

    findWaitingTime(processes, n, bt, at, wt);
    findTurnAroundTime(processes, n, bt, wt, tat);

    cout << "Processes  " << " Arrival time  " << " Burst time  "
         << " Waiting time  " << " Turnaround time\n";

    for (int i = 0; i < n; i++) {
        total_wt += wt[i];
        total_tat += tat[i];
        cout << "   " << processes[i] << "\t\t" << at[i] << "\t\t"
             << bt[i] << "\t    " << wt[i] << "\t\t  " << tat[i] << endl;
    }

    cout << "Average waiting time = " 
         << (float)total_wt / (float)n << endl;
    cout << "Average turnaround time = " 
         << (float)total_tat / (float)n << endl;
}

int main()
{
    int n;
    cout << "Enter the number of processes: ";
    cin >> n;

    int processes[n], arrival_time[n], burst_time[n];
    
    for (int i = 0; i < n; i++) {
        processes[i] = i + 1;
        cout << "Enter arrival time for process " << i + 1 << ": ";
        cin >> arrival_time[i];
        cout << "Enter burst time for process " << i + 1 << ": ";
        cin >> burst_time[i];
    }

    findavgTime(processes, n, burst_time, arrival_time);
    return 0;
}
