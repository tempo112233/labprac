#include <iostream>
#include <iomanip>
using namespace std;

void findWaitingTime(int processes[], int n, int bt[], int wt[], int quantum) {
    int rem_bt[n];
    for (int i = 0; i < n; i++) {
        rem_bt[i] = bt[i];
    }
    
    int t = 0;
    while (true) {
        bool done = true;
        for (int i = 0; i < n; i++) {
            if (rem_bt[i] > 0) {
                done = false; // There are processes that are not done
                if (rem_bt[i] > quantum) {
                    t += quantum;
                    rem_bt[i] -= quantum;
                } else {
                    t += rem_bt[i];
                    wt[i] = t - bt[i];
                    rem_bt[i] = 0;
                }
            }
        }
        if (done) break; // All processes are done
    }
}

void findTurnAroundTime(int processes[], int n, int bt[], int wt[], int tat[]) {
    for (int i = 0; i < n; i++) {
        tat[i] = bt[i] + wt[i];
    }
}

void findAverageTime(int processes[], int n, int bt[], int quantum) {
    int wt[n], tat[n];
    int total_wt = 0, total_tat = 0;

    findWaitingTime(processes, n, bt, wt, quantum);
    findTurnAroundTime(processes, n, bt, wt, tat);
    
    cout << "\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n";
    for (int i = 0; i < n; i++) {
        cout << "\t" << processes[i] << "\t\t" << bt[i] << "\t\t" 
             << wt[i] << "\t\t" << tat[i] << "\n";
        total_wt += wt[i];
        total_tat += tat[i];
    }
    
    cout << "\nAverage Waiting Time: " << fixed << setprecision(2) 
         << static_cast<float>(total_wt) / n << endl;
    cout << "Average Turnaround Time: " << fixed << setprecision(2) 
         << static_cast<float>(total_tat) / n << endl;
}

int main() {
    int n;
    cout << "Enter the number of processes: ";
    cin >> n;

    int processes[n];
    int bt[n];
    
    for (int i = 0; i < n; ++i) {
        processes[i] = i + 1; // Assign process IDs (1, 2, 3, ...)
        cout << "Enter burst time for Process " << processes[i] << ": ";
        cin >> bt[i];
    }

    int quantum;
    cout << "Enter time quantum: ";
    cin >> quantum;

    findAverageTime(processes, n, bt, quantum);

    return 0;
}
